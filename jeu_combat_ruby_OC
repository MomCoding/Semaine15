#JEU DE COMBAT DANS LA CONSOLE

class Personne
  attr_accessor :nom, :points_de_vie, :en_vie

  def initialize(nom)
    @nom = nom
    @points_de_vie = 100
    @en_vie = true
  end
  
  def info
    if @en_vie
    	return "#{@nom} (#{@points_de_vie.to_s} /100 pts de vie)"
    else
    	return @nom + " vaincu"
    end
  end
  
  def attaque(personne)
    puts "#{@nom} attaque #{personne.nom}"
  end
  
  def subit_attaque(degats_recus)
    @points_de_vie -= degats_recus.to_i
    puts "#{@nom} subit #{degats_recus} points de dégâts"
    if @points_de_vie > 0
    	@en_vie 	
    else
    	@en_vie = false
    end
    
end
   
end

class Joueur < Personne
  attr_accessor :degats_bonus

  def initialize(nom)
    # Par défaut le joueur n'a pas de dégâts bonus
    @degats_bonus = 0

    # Appelle le "initialize" de la classe mère (Personne)
    super(nom)
  end
  
  def degats
    degats = 100 - @points_de_vie
    puts "#{@nom} a subi #{degats} points de dégâts"
  end
  
  def soin
    @points_de_vie += 25
    puts "#{@nom} s'est soigné et a gagné 25 points de vie"
  end
  
  def ameliorer_degats
    @degats_bonus += 25
    puts "#{@nom} bénéficie de 25 points de dégâts-bonus supplémentaires"
end
end

class Ennemi < Personne

  def degats
    # A faire:
    # - Calculer les dégats
    degats = 100 - @points_de_vie
  end
  
end

class Jeu

  def self.actions_possibles(monde)
    puts "ACTIONS POSSIBLES :"

    puts "0 - Se soigner"
    puts "1 - Améliorer son attaque"

    # On commence à 2 car 0 et 1 sont réservés pour les actions
    # de soin et d'amélioration d'attaque
    i = 2
    monde.ennemis.each do |ennemi|
      puts "#{i} - Attaquer #{ennemi.info}"
      i = i + 1
    end
    puts "99 - Quitter"
  end
  
  def self.est_fini(joueur, monde)
    # A faire:
    # - Déterminer la condition de fin du jeu
    self.est_fini(joueur,monde) == true if joueur.en_vie.nil?
  end
  
end


class Monde  
  attr_accessor :ennemis

  def ennemis_en_vie
    return ennemis unless ennemis.nil?
  end
end

################################################

# Initialisation du monde
monde = Monde.new

# Ajout des ennemis
monde.ennemis = [
  Ennemi.new("Balrog"),
  Ennemi.new("Goblin"),
  Ennemi.new("Squelette")
]

# Initialisation du joueur
joueur = Joueur.new("Jean-Michel Paladin")

# Message d'introduction. \n signifie "retour à la ligne"
puts "\n\nAinsi débutent les aventures de #{joueur.nom}\n\n"

# Boucle de jeu principale
100.times do |tour|
  puts "\n------------------ Tour numéro #{tour} ------------------"

# Affiche les différentes actions possibles
  Jeu.actions_possibles(monde)

  puts "\nQUELLE ACTION FAIRE ?"
  # On range dans la variable "choix" ce que l'utilisateur renseigne
  choix = gets.chomp.to_i


  # En fonction du choix on appelle différentes méthodes sur le joueur
  if choix == 0
    joueur.soin  
  elsif choix == 1
    joueur.ameliorer_degats
  elsif choix == 99
    # On quitte la boucle de jeu si on a choisi
    # 99 qui veut dire "quitter"
    break
  else
    # Choix - 2 car nous avons commencé à compter à partir de 2
    # car les choix 0 et 1 étaient réservés pour le soin et
    # l'amélioration d'attaque
    ennemi_a_attaquer = monde.ennemis[choix - 2]
    joueur.attaque(ennemi_a_attaquer)
    ennemi_a_attaquer.subit_attaque(rand(1..20))
  end

  puts "\nLES ENNEMIS RIPOSTENT !"
  # Pour tous les ennemis en vie ...
  monde.ennemis_en_vie.each do |ennemi|
    # ... le héros subit une attaque.
    ennemi.attaque(joueur)
    joueur.subit_attaque(rand(1..20))
  end
  
  puts "\nEtat du héros: #{joueur.info}\n"
  
# Si le jeu est fini, on interrompt la boucle
  break if Jeu.est_fini(joueur, monde) || joueur.points_de_vie <= 0 
end

puts "\nGame Over!\n"

puts "Le résultat de la partie est : 
#{joueur.info} \n
#{monde.ennemis[0].info} \n
#{monde.ennemis[1].info} \n
#{monde.ennemis[2].info} "


if joueur.en_vie
  puts "Vous avez gagné !"
else
  puts "Vous avez perdu !"
end



